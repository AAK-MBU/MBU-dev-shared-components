name: Update version number

on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  update-version-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install toml library
        run: pip install toml

      - name: Update pyproject.toml version with tag
        run: |
          # Get the tag that triggered the push (e.g., v1.2.3)
          VERSION_TAG="${GITHUB_REF#refs/tags/}"
          
          # Update pyproject.toml with the version tag
          python -c "
          import toml

          # Load pyproject.toml
          with open('pyproject.toml', 'r') as f:
              pyproject = toml.load(f)

          # Update the version field
          pyproject['tool']['poetry']['version'] = '${VERSION_TAG}'

          # Save the modified pyproject.toml
          with open('pyproject.toml', 'w') as f:
              toml.dump(pyproject, f)
          "
          
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add pyproject.toml
          git commit -m "Update pyproject.toml with version ${VERSION_TAG}"
          git push
          

      # - name: Get tag
      #   run: |
      #     OLD_VERSION=$(grep ^version pyproject.toml | cut -d '"' -f 2)
      #     NEW_VERSION=$GITHUB_REF_NAME
      #     echo "Old version from pyproject.toml: $OLD_VERSION"
      #     echo "New version from tag: $GITHUB_REF_NAME"
      #     sed -i "s+version = $OLD_VERSION+version = $NEW_VERSION+g" pyproject.toml
      # - name: Commit Changes
      #   run: |
      #     git config user.name "$GITHUB_ACTOR"
      #     git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      #     git commit -a -m "Update version number to new_version"
      #     git push origin HEAD:${{ github.head_ref }}

# on: 
#   pull_request:
#     branches:
#       - main
#       - test-build-by-action

# jobs:
#   update-version-number:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       - name: Update Version Number
#         run: |
#           OLD_VERSION=$(grep ^version pyproject.toml | cut -d '"' -f 2)
#           OLD_VERSION="\"$OLD_VERSION\""
#           echo  $OLD_VERSION
#           NEW_VERSION="\"$GITHUB_REF_NAME\""
#           echo $NEW_VERSION
#           sed -i "s+version = $OLD_VERSION+version = $NEW_VERSION+g" pyproject.toml
      # - name: Commit Changes
      #   run: |
      #     git config user.name "$GITHUB_ACTOR"
      #     git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      #     git commit -a -m "Update version number to new_version"
      #     git push origin HEAD:${{ github.head_ref }}

# jobs:
#   build:
#     name: Update version number in pyproject